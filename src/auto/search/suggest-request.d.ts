/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type ResultsContentType = ('experimental' | 'computational')[];

export interface SuggestQuery {
    id?: string;
    type: 'basic' | 'term';
    suggest: BasicSuggestQuery | TermSuggestQuery;
    highlight?: SuggestQueryHighlight;
    results_content_type?: ResultsContentType;
}
export interface BasicSuggestQuery {
    /**
     * Suggestion term(s).
     */
    text: string;
    /**
     * Suggestion field(s).
     */
    attributes?: string[];
    /**
     * Configure the maximum number of suggestions to be returned.
     */
    size?: number;
}
export interface TermSuggestQuery {
    /**
     * Suggestion term(s).
     */
    text: string;
    completion: {
        /**
         * Suggestion field.
         */
        attribute: string;
        /**
         * Suggestions can be filtered by their associated categories.
         */
        filter?: {
            /**
             * Defines a category context name.
             */
            name: string;
            /**
             * Specifies filter criteria. If multiple categories are set on the query, suggestions match if they contain at least one of the provided values.
             */
            values: string[];
        }[];
    }[];
    /**
     * Configures the maximum number of suggestions to be returned.
     */
    size?: number;
}
export interface SuggestQueryHighlight {
    highlighter_type?: 'plain' | 'unified' | 'fvh';
    /**
     * Specifies how to break the highlighted fragments.
     */
    boundary_scanner_type?: 'chars' | 'sentence' | 'word';
    /**
     * The maximum number of fragments to return.
     */
    num_of_fragments?: number;
    /**
     * The size of the highlighted fragment in characters.
     */
    fragment_size?: number;
    /**
     * Controls the margin from which you want to start highlighting.
     */
    fragment_offset?: number;
    /**
     * HTML tag to use for the highlighted text. Use in conjunction with <b>post_tag</b>.
     */
    pre_tag?: string;
    /**
     * HTML tag to use for the highlighted text. Use in conjunction with <b>pre_tag</b>.
     */
    post_tag?: string;
}
